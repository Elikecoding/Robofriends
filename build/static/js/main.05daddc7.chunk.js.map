{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","username","className","src","alt","CardList","robots","map","user","i","birthday","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","err","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC/B,OACE,sBAAKC,UAAY,sDAAjB,UACE,qBAAKC,IAAG,+BAA2BL,EAA3B,YAAyCM,IAAK,SACtD,gCACE,wCAAWL,KACX,wCAAWC,KAAU,uBACrB,2CAAcC,YCaPI,EApBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAClB,OACE,8BAEIA,EAAOC,KAAK,SAACC,EAAMC,GACjB,OACE,cAAE,EAAF,CACYX,GAAMQ,EAAOG,GAAGX,GAChBC,KAAQO,EAAOG,GAAGV,KAClBE,SAAYK,EAAOG,GAAGR,SACtBD,MAASM,EAAOG,GAAGT,MACnBU,SAAYJ,EAAOG,GAAGC,UALtBD,SCKTE,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKX,UAAU,MAAf,SACE,uBAAOY,KAAK,SACZZ,UAAU,oCACVa,YAAY,iBACZC,SAAUH,OCCDI,EAPA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,QAApE,SACIJ,EAAMK,YCqBCC,E,kDAvBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHI,E,qDAOlB,SAAkBC,EAAKC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SAEX,8BACE,gEAICG,KAAKX,MAAMK,a,GApBKQ,aC0CZC,G,wDApCb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXnB,OAAQ,GACRM,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAExB,OAAQmC,S,oBAOzC,WACE,MAA+BZ,KAAKJ,MAA5BnB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQvC,EAAOyC,OACX,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACE,cAAE,EAAF,CAAYW,aAAcgB,KAAKI,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAU3B,OAAUoC,WANJ,gD,GAxBVX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAE,EAAF,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05daddc7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nconst Card = ({ id, name, email, username }) =>{\r\n  return(\r\n    <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src ={`https://robohash.org/${id}?200x200`} alt= 'card'/> \r\n      <div>\r\n        <h2>name: {name}</h2>\r\n        <p>email: {email}</p><br></br>\r\n        <p>username: {username}</p> \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n  return(\r\n    <div>\r\n      {\r\n        robots.map( (user, i) =>{\r\n          return( \r\n            < Card key={i} \r\n                        id = {robots[i].id} \r\n                        name = {robots[i].name} \r\n                        username = {robots[i].username} \r\n                        email = {robots[i].email} \r\n                        birthday = {robots[i].birthday}\r\n                  />\r\n          );    \r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return(\r\n    <div className='pa2'>\r\n      <input type='search'\r\n      className='pa3 ba b---green bg-lightest-blue'\r\n      placeholder='Search Here...'\r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n  return(\r\n    <div style={{overflow: 'scroll', border: '1px solid black', height: '70vh'}}>\r\n      { props.children }\r\n    </div>\r\n  )\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    } \r\n  }\r\n\r\n  componentDidCatch(err, info){\r\n    this.setState({ hasError: true })\r\n  }\r\n  \r\n  render(){\r\n    if (this.state.hasError) {\r\n      return(\r\n        <div>\r\n          <h1>Opps somethign went wrong...</h1>\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({ robots: users }))\r\n  }\r\n\r\n  onSearchChange = (event)=>{\r\n    this.setState({ searchfield: event.target.value }) \r\n  }\r\n\r\n  render(){\r\n    const { robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ? <h1>Loading...</h1> :\r\n        <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n          < SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots = {filteredRobots}/>\r\n          </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n    }\r\n  }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}